// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT     0
#define CURSOR      1
#define FUNC_NUM    2
#define SYS         3

/ {
    behaviors {
        mt: mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <250>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
            display-name = "Mod-Tap";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <CURSOR FUNC_NUM>;
            then-layer = <SYS>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
        //╭────────────┬────────────┬────────────┬────────────┬────────────╮   ╭────────────┬────────────┬────────────┬────────────┬────────────╮
        //│ Q          │ W (LGUI)   │ F (LALT)   │  P         │  B         │   │  J         │  L         │  U         │ Y          │ ' and "    │
            &kp Q        &mt LGUI W    &mt LALT F   &kp P        &kp B            &kp J        &kp L        &kp U       &mt RGUI Y   &kp SQT
        //├────────────┼────────────┼────────────┼────────────┼────────────┤   ├────────────┼────────────┼────────────┼────────────┼────────────┤
        //│ A (LCTRL)  │ R          │ S          │ T (LSHFT)  │  G         │   │  M         │  N         │  E         │ I          │  O         │
            &mt LCTRL A  &kp R        &kp S        &mt LSHFT T   &kp G            &kp M       &mt RSHFT N   &kp E       &kp I        &mt RCTRL O
        //├────────────┼────────────┼────────────┼────────────┼────────────┤   ├────────────┼────────────┼────────────┼────────────┼────────────┤
        //│ Z          │ X          │ C          │  D         │  V         │   │  K         │  H         │ , and <    │ . and      │ / and ?    │
            &kp Z        &kp X        &kp C         &kp D        &kp V            &kp K        &kp H       &kp COMMA    &kp DOT      &kp FSLH
        //╰────────────┴────────────┴────────────┼────────────┼────────────┤   ├────────────┼────────────┼────────────┴────────────┴────────────╯
                                              &lt CURSOR ENTER  &mt RALT SPACE   &kp BSPC     &lt FUNC_NUM ESC
        //                                       ╰────────────┴────────────╯   ╰────────────┴────────────╯
            >;
        };

        arrows_media_layer {
            bindings = <
        //╭────────────┬────────────┬────────────┬────────────┬────────────╮   ╭────────────┬────────────┬────────────┬────────────┬────────────╮
        //│            │ LGUI       │ LEFT_ALT   │ PAGE_UP    │ HOME       │   │ SLCK       │ PSCRN      │PAUSE_BREAK │   RGUI     │  INS       │
            &none        &kp LGUI     &kp LALT     &kp PG_UP    &kp HOME         &kp SLCK     &kp PSCRN  &kp PAUSE_BREAK  &kp RGUI    &kp INS
        //├────────────┼────────────┼────────────┼────────────┼────────────┤   ├────────────┼────────────┼────────────┼────────────┼────────────┤
        //│ LCTRL      │ LEFT       │ UP         │ RIGHT      │ TAB        │   │ TAB        │ LSHFT      │ C_VOL_UP   │            │ DEL        │
            &kp LCTRL    &kp LEFT     &kp UP       &kp RIGHT    &kp TAB          &kp TAB      &kp LSHFT   &kp C_VOL_UP  &none        &kp DEL
        //├────────────┼────────────┼────────────┼────────────┼────────────┤   ├────────────┼────────────┼────────────┼────────────┼────────────┤
        //│            │            │ DOWN       │ PAGE_DOWN  │ END        │   │            │            │ C_VOL_DN   │            │ C_MUTE     │
            &none        &none        &kp DOWN     &kp PG_DN    &kp END          &none        &none       &kp C_VOL_DN  &none        &kp C_MUTE
        //╰────────────┴────────────┴────────────┼────────────┼────────────┤   ├────────────┼────────────┼────────────┴────────────┴────────────╯
                                                   &none        &kp SPACE        &kp BSPC    &lt FUNC_NUM ESC
        //                                       ╰────────────┴────────────╯   ╰────────────┴────────────╯
            >;
        };

        func_num_layer {
            bindings = <
        //╭────────────┬────────────┬────────────┬────────────┬────────────╮   ╭────────────┬────────────┬────────────┬────────────┬────────────╮
        //│ F1         │ F2         │ F3 (LALT)  │ F4         │ [ and {    │   │ ` and ¬    │  7 and &   │  8 and *   │  9 and (   │  - and _   │
            &kp F1       &kp F2       &mt LALT F3  &kp F4       &kp LBKT         &kp GRAVE     &kp N7       &kp N8       &kp N9       &kp MINUS
        //├────────────┼────────────┼────────────┼────────────┼────────────┤   ├────────────┼────────────┼────────────┼────────────┼────────────┤
        //│F5 (LCTRL)  │ F6 (LGUI)  │ F7         │ F8 LSHFT   │ ] and }    │   │ ; and :    │4 $ (RSHFT) │ 5 and %    │ 6 and ^    │= + (RCTRL) │
           &mt LCTRL F5 &mt LGUI F6   &kp F7      &mt LSHFT F8  &kp RBKT         &kp SEMI    &mt RSHFT N4  &kp N5       &kp N6      &mt RCTRL EQUAL
        //├────────────┼────────────┼────────────┼────────────┼────────────┤   ├────────────┼────────────┼────────────┼────────────┼────────────┤
        //│ F9         │ F10        │ F11        │ F12        │ \ and |    │   │ 0 and )    │ 1 and !    │  2 and @   │  3 and #   │ DEL and .  │
            &kp F9       &kp F10      &kp F11      &kp F12      &kp BSLH         &kp N0       &kp N1        &kp N2       &kp N3      &kp KP_DOT
        //╰────────────┴────────────┴────────────┼────────────┼────────────┤   ├────────────┼────────────┼────────────┴────────────┴────────────╯
                                             &lt CURSOR ENTER   &kp SPACE        &kp BSPC     &none
        //                                       ╰────────────┴────────────╯   ╰────────────┴────────────╯
            >;
        };

        sys_layer {
            bindings = <
        //╭────────────┬────────────┬────────────┬────────────┬────────────╮   ╭────────────┬────────────┬────────────┬────────────┬────────────╮
        //│ BT 0       │ BT 1       │ BT 2       │ BT 3       │ BT 4       │   │            │            │            │            │            │
           &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4      &none        &none        &none        &none        &none
        //├────────────┼────────────┼────────────┼────────────┼────────────┤   ├────────────┼────────────┼────────────┼────────────┼────────────┤
        //│ BT_CLR     │            │            │            │            │   │            │            │            │            │ BT_CLR     │
            &bt BT_CLR      &none        &none      &none        &none            &none        &none        &none        &none       &bt BT_CLR
        //├────────────┼────────────┼────────────┼────────────┼────────────┤   ├────────────┼────────────┼────────────┼────────────┼────────────┤
        //│ RESET      │BOOTLOADER  │            │            │            │   │            │            │            │BOOTLOADER  │ RESET      │
            &sys_reset   &bootloader   &none        &none        &none            &none        &none        &trans      &bootloader  &sys_reset
        //╰────────────┴────────────┴────────────┼────────────┼────────────┤   ├────────────┼────────────┼────────────┴────────────┴────────────╯
                                                    &none        &none            &none        &none
        //                                       ╰────────────┴────────────╯   ╰────────────┴────────────╯
            >;
        };
    };
};
